set(BACKEND_LIBS "")

function(configure_backends path)
    file(GLOB backends LIST_DIRECTORIES true ${path})

    set(BACKEND_ENABLED 0)
    set(STATIC_BACKENDS 0)
    set(SHARED_BACKENDS 0)
    
    foreach(backend ${backends})
        cmake_path(GET backend FILENAME backend_name)
        option(ENABLE_${backend_name} OFF)
        message(STATUS "${backend_name} = ${ENABLE_${backend_name}}")
        if (ENABLE_${backend_name})
            include(${backend}/params.cmake)
            list(FIND SUPPORTED_PLATFORMS ${CMAKE_SYSTEM_NAME} system_idx)
            if (system_idx GREATER -1)
                if(${BACKEND_STYLE} STREQUAL "SHARED")
                    math(EXPR SHARED_BACKENDS "${SHARED_BACKENDS}+1")
                else()
                    math(EXPR STATIC_BACKENDS "${STATIC_BACKENDS}+1")
                endif()
                message(STATUS "Enabling ${backend_name}")
                add_subdirectory(${backend})
                set(BACKEND_LIBS "${BACKEND_LIBS};${backend_name}" PARENT_SCOPE)
                math(EXPR BACKEND_ENABLED "${BACKEND_ENABLED}+1")
            else()
                message(WARNING "Tried to enable ${backend_name} on unsupported platform (${CMAKE_SYSTEM_NAME}), skipping")
            endif()
        endif()
    endforeach()
    
    if(${BACKEND_ENABLED} EQUAL 0)
        message(FATAL_ERROR "At least one IO backend must be enabled")
    endif()
    
    if(${STATIC_BACKENDS} GREATER 1)
        message(FATAL_ERROR "Only one static IO backend can be enabled at a time")
    endif()
    
    if(${STATIC_BACKENDS} GREATER 1 AND ${SHARED_BACKENDS} GREATER 1)
        message(FATAL_ERROR "You can't enable a static and shared IO backend at the same time")
    endif()
endfunction()

configure_backends("backends/io/*")
configure_backends("backends/video/*")